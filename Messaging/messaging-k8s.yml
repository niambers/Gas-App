#tag::rbac[]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: messaging

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: rabbitmq-peer-discovery-rbac
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: rabbitmq-peer-discovery-rbac
subjects:
  - kind: ServiceAccount
    name: messaging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rabbitmq-peer-discovery-rbac
#end::rbac[]

#tag::configmap[]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
data:
  enabled_plugins: |
    [rabbitmq_management,rabbitmq_peer_discovery_k8s].
  rabbitmq.conf: |
    cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.address_type = hostname
    cluster_formation.node_cleanup.interval = 30
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    queue_master_locator=min-masters
    loopback_users.guest = false
#end::configmap[]

#tag::service[]
---
apiVersion: v1
kind: Service
metadata:
  name: messaging
  labels:
    app: messaging
spec:
  selector:
    app: messaging
  ports:
    - name: amqp
      protocol: TCP
      port: 5672
    - name: http
      protocol: TCP
      port: 15672
    #port: 25672
#end::service[]

#tag::statefulset[]
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: messaging
  labels:
    app: messaging
spec:
  serviceName: messaging
  replicas: 3
  selector:
    matchLabels:
      app: messaging
  template:
    metadata:
      labels:
        app: messaging
    spec:
      serviceAccountName: messaging
      containers:
        - name: rabbitmq
          image: rabbitmq:3.8.2-management
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: K8S_SERVICE_NAME
              value: messaging
            - name: K8S_HOSTNAME_SUFFIX
              value: .messaging.default.svc.cluster.local
            - name: RABBITMQ_NODENAME
              value: rabbit@$(MY_POD_NAME).messaging.default.svc.cluster.local
            - name: RABBITMQ_ERLANG_COOKIE
              value: "changeme"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/rabbitmq
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              - key: enabled_plugins
                path: enabled_plugins
#end::statefulset[]

#So I watched the video for rabbitmq to k8s and I used the messaging code (as you can see).
#It worked when I tested it out as I followed the video. But is this really all I had to do?
#I finished it a while ago so I kept forgeting to ask and now its due.
#In the comments can you explain what I was really suppose to do besides change the rabbitmq version?
#Because I feel like I didn't do this properly.
